name: Android Apk

on:
  push:
    tags:
      - '*'
      
jobs:
  android-apk:
    name: Create new Android apk build and upload it
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Setup Node 14.x
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install


      - name: Create .env file
        run: |
          cat << EOF > .env
          READ_ONLY_SIGNER_PUBLIC_KEY=${{ secrets.READ_ONLY_SIGNER_PUBLIC_KEY }}
          READ_ONLY_SIGNER_PUBLIC_KEY_HASH=${{ secrets.READ_ONLY_SIGNER_PUBLIC_KEY_HASH }}
          TEMPLE_WALLET_API=${{ secrets.TEMPLE_WALLET_API }}
          SEGMENT_ANALYTICS_KEY=${{ secrets.SEGMENT_ANALYTICS_KEY }}
          TEMPLE_WALLET_EXOLIX_API_KEY=${{ secrets.TEMPLE_WALLET_EXOLIX_API_KEY }}
          EOF

      - name: Update gradle.properties
        run: |
          cd android && sed -i 's/^MYAPP_UPLOAD_KEY_PASSWORD=*/MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.KEYSTORE_KEY }}/g' gradle.properties && sed -i 's/^MYAPP_UPLOAD_STORE_PASSWORD=*/MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.KEYSTORE_KEY }}/g' gradle.properties

      - name: Build Android Apk
        run: |
          cd android && ./decrypt_script.sh
          yarn android:release:apk
        env:
          GOOGLE_PLAY_AUTHKEY: ${{ secrets.GOOGLE_PLAY_AUTHKEY }}
          KEYSTORE_KEY: ${{ secrets.KEYSTORE_KEY }}

      - name: Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: |
            android/app/build/outputs/apk/release/app-release.apk

